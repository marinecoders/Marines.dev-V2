---
import Layout from '@layouts/Layout.astro';
import MaxWidthContainer from '@components/sections/MaxWidthContainer.svelte';
import FooterFull from '@components/FooterFull.svelte';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const articles = await getCollection('articles');
  return articles.map((article) => ({
    params: { slug: article.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content } = await article.render();
---

<Layout title={`${article.data.title} - Marine Coders`}>
  <MaxWidthContainer>
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <!-- Article Header -->
      <div class="mb-8">
        <div class="flex items-center gap-4 mb-4">
          <span class="px-3 py-1 bg-mcswf-gold text-black text-sm font-semibold rounded-full">
            {article.data.category}
          </span>
          {article.data.external && (
            <span class="px-3 py-1 bg-blue-600 text-white text-sm font-semibold rounded-full">
              External Article
            </span>
          )}
          {article.data.featured && (
            <span class="px-3 py-1 bg-yellow-600 text-white text-sm font-semibold rounded-full">
              Featured
            </span>
          )}
        </div>
        
        <h1 class="text-4xl md:text-5xl font-bold text-mcswf-gold mb-4">
          {article.data.title}
        </h1>
        
        <p class="text-xl text-gray-300 mb-6">
          {article.data.description}
        </p>
        
        <div class="flex items-center justify-between text-gray-400 mb-8">
          <div class="flex items-center gap-4">
            <span>By <strong class="text-white">{article.data.author}</strong></span>
            <time datetime={article.data.publishDate.toISOString()}>
              {article.data.publishDate.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </time>
          </div>
          {article.data.external && article.data.externalUrl && (
            <a 
              href={article.data.externalUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"
            >
              Read Original
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
              </svg>
            </a>
          )}
        </div>
      </div>

      <!-- Article Image -->
      {article.data.image && (
        <div class="mb-8">
          <img 
            src={article.data.image.src} 
            alt={article.data.image.alt}
            class="w-full h-64 md:h-96 object-cover rounded-lg"
          />
        </div>
      )}

      <!-- Article Content -->
      <article class="prose prose-lg prose-invert max-w-none">
        <Content />
      </article>

      <!-- Tags -->
      {article.data.tags && article.data.tags.length > 0 && (
        <div class="mt-12 pt-8 border-t border-gray-700">
          <h3 class="text-lg font-semibold text-mcswf-gold mb-4">Tags</h3>
          <div class="flex flex-wrap gap-2">
            {article.data.tags.map((tag) => (
              <span class="px-3 py-1 bg-gray-700 text-gray-300 text-sm rounded-full">
                #{tag}
              </span>
            ))}
          </div>
        </div>
      )}

      <!-- Navigation -->
      <div class="mt-12 pt-8 border-t border-gray-700">
        <div class="flex justify-between items-center">
          <a 
            href="/articles"
            class="inline-flex items-center gap-2 px-4 py-2 bg-gray-700 text-white rounded hover:bg-gray-600 transition-colors"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Back to Articles
          </a>
          
          {!article.data.external && (
            <div class="flex gap-2">
              <button class="p-2 bg-gray-700 text-gray-300 rounded hover:bg-gray-600 transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
                </svg>
              </button>
              <button class="p-2 bg-gray-700 text-gray-300 rounded hover:bg-gray-600 transition-colors">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                </svg>
              </button>
            </div>
          )}
        </div>
      </div>
    </div>
  </MaxWidthContainer>
  <FooterFull client:only="svelte" />
</Layout>

<style>
  .prose {
    color: #e5e7eb;
  }
  
  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    color: #00cc6a;
  }
  
  .prose a {
    color: #00cc6a;
    text-decoration: none;
  }
  
  .prose a:hover {
    color: #00ff88;
    text-decoration: underline;
  }
  
  .prose blockquote {
    border-left: 4px solid #00cc6a;
    background-color: #374151;
    padding: 1rem;
    margin: 1.5rem 0;
    border-radius: 0.375rem;
  }
  
  .prose code {
    background-color: #374151;
    color: #00ff88;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }
  
  .prose pre {
    background-color: #1f2937;
    border: 1px solid #374151;
    border-radius: 0.5rem;
    padding: 1rem;
    overflow-x: auto;
  }
  
  .prose pre code {
    background-color: transparent;
    color: #e5e7eb;
    padding: 0;
  }
  
  .prose ul,
  .prose ol {
    padding-left: 1.5rem;
  }
  
  .prose li {
    margin: 0.5rem 0;
  }
  
  .prose strong {
    color: #00cc6a;
    font-weight: 600;
  }
</style>
