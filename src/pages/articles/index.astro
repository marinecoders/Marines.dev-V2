---
import Layout from '@layouts/Layout.astro';
import MaxWidthContainer from '@components/sections/MaxWidthContainer.svelte';
import FooterFull from '@components/FooterFull.svelte';
import { getCollection } from 'astro:content';

// Get all articles
const allArticles = await getCollection('articles');

// Sort articles by publish date (newest first)
const sortedArticles = allArticles.sort((a, b) => 
  new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);

// Separate featured and regular articles
const featuredArticles = sortedArticles.filter(article => article.data.featured);
const regularArticles = sortedArticles.filter(article => !article.data.featured);

// Get unique categories
const categories = [...new Set(allArticles.map(article => article.data.category))];
---

<Layout title="Articles - Marine Coders">
  <MaxWidthContainer>
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <!-- Page Header -->
      <div class="text-center mb-16">
        <h1 class="text-4xl md:text-5xl font-bold text-mcswf-gold mb-4">
          Articles & News
        </h1>
        <p class="text-xl text-gray-300 max-w-3xl mx-auto mb-4">
          Stay informed about Marine Coders initiatives, industry insights, and the latest developments in military software development.
        </p>
        <div class="flex justify-center">
          <a 
            href="/articles/rss.xml"
            class="inline-flex items-center gap-2 px-4 py-2 bg-gray-700 text-gray-300 rounded hover:bg-gray-600 transition-colors text-sm"
          >
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
              <path d="M6.503 20.752c0 1.794-1.456 3.248-3.251 3.248S0 22.546 0 20.752s1.456-3.248 3.252-3.248 3.251 1.454 3.251 3.248zm-6.503-12.572v4.811c6.05.062 10.96 4.966 11.022 11.009h4.817c-.062-8.71-7.118-15.758-15.839-15.82zm0-3.368c10.58.046 19.152 8.594 19.183 19.188h4.817c-.03-13.231-10.755-23.954-24-24v4.812z"/>
            </svg>
            RSS Feed
          </a>
        </div>
      </div>

      <!-- Featured Articles Section -->
      {featuredArticles.length > 0 && (
        <section class="mb-16">
          <h2 class="text-3xl font-bold text-mcswf-gold mb-8">Featured Articles</h2>
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {featuredArticles.map((article) => (
              <article class="bg-gray-800 rounded-lg overflow-hidden border border-mcswf-gold hover:border-mcswf-gold-dark transition-colors">
                {article.data.image && (
                  <div class="aspect-video bg-gray-700">
                    <img 
                      src={article.data.image.src} 
                      alt={article.data.image.alt}
                      class="w-full h-full object-cover"
                    />
                  </div>
                )}
                <div class="p-6">
                  <div class="flex items-center gap-4 mb-3">
                    <span class="px-3 py-1 bg-mcswf-gold text-black text-sm font-semibold rounded-full">
                      {article.data.category}
                    </span>
                    {article.data.external && (
                      <span class="px-3 py-1 bg-blue-600 text-white text-sm font-semibold rounded-full">
                        External
                      </span>
                    )}
                  </div>
                  <h3 class="text-2xl font-bold text-white mb-3">
                    {article.data.external ? (
                      <a 
                        href={article.data.externalUrl} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        class="hover:text-mcswf-gold transition-colors"
                      >
                        {article.data.title}
                        <svg class="inline-block w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                        </svg>
                      </a>
                    ) : (
                      <a 
                        href={`/articles/${article.slug}`}
                        class="hover:text-mcswf-gold transition-colors"
                      >
                        {article.data.title}
                      </a>
                    )}
                  </h3>
                  <p class="text-gray-300 mb-4">{article.data.description}</p>
                  <div class="flex items-center justify-between text-sm text-gray-400">
                    <span>By {article.data.author}</span>
                    <time datetime={article.data.publishDate.toISOString()}>
                      {article.data.publishDate.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </section>
      )}

      <!-- All Articles Section -->
      <section>
        <div class="flex items-center justify-between mb-8">
          <h2 class="text-3xl font-bold text-mcswf-gold">All Articles</h2>
          <div class="flex gap-2">
            {categories.map((category) => (
              <span class="px-3 py-1 bg-gray-700 text-gray-300 text-sm rounded-full">
                {category}
              </span>
            ))}
          </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {regularArticles.map((article) => (
            <article class="bg-gray-800 rounded-lg overflow-hidden border border-gray-700 hover:border-mcswf-gold transition-colors">
              {article.data.image && (
                <div class="aspect-video bg-gray-700">
                  <img 
                    src={article.data.image.src} 
                    alt={article.data.image.alt}
                    class="w-full h-full object-cover"
                  />
                </div>
              )}
              <div class="p-6">
                <div class="flex items-center gap-2 mb-3">
                  <span class="px-2 py-1 bg-mcswf-gold text-black text-xs font-semibold rounded">
                    {article.data.category}
                  </span>
                  {article.data.external && (
                    <span class="px-2 py-1 bg-blue-600 text-white text-xs font-semibold rounded">
                      External
                    </span>
                  )}
                </div>
                <h3 class="text-xl font-bold text-white mb-3">
                  {article.data.external ? (
                    <a 
                      href={article.data.externalUrl} 
                      target="_blank" 
                      rel="noopener noreferrer"
                      class="hover:text-mcswf-gold transition-colors"
                    >
                      {article.data.title}
                      <svg class="inline-block w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                      </svg>
                    </a>
                  ) : (
                    <a 
                      href={`/articles/${article.slug}`}
                      class="hover:text-mcswf-gold transition-colors"
                    >
                      {article.data.title}
                    </a>
                  )}
                </h3>
                <p class="text-gray-300 text-sm mb-4 line-clamp-3">{article.data.description}</p>
                <div class="flex items-center justify-between text-xs text-gray-400">
                  <span>By {article.data.author}</span>
                  <time datetime={article.data.publishDate.toISOString()}>
                    {article.data.publishDate.toLocaleDateString('en-US', {
                      month: 'short',
                      day: 'numeric'
                    })}
                  </time>
                </div>
              </div>
            </article>
          ))}
        </div>
      </section>

    </div>
  </MaxWidthContainer>
  <FooterFull client:only="svelte" />
</Layout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
